version: 2

defaults:
  checks_failure_payload: &checks_failure_payload
    title: 'Mergeable Run have been Completed!'
    summary: '### Status: {{toUpperCase validationStatus}}
              Here are some stats of the run:
              {{validationCount}} validations were ran.
              {{passCount}} PASSED
              {{failCount}} FAILED'
    text: '{{#each validationSuites}}\n
          #### {{{statusIcon status}}} Validator: {{toUpperCase name}}\n
          {{#each validations }} * {{{statusIcon status}}} ***{{{ description }}}***\n
                  Input : {{{details.input}}}\n
                  Settings : {{{displaySettings details.settings}}}\n
                  {{/each}}\n
          {{/each}}'

mergeable:
  - when: pull_request.*
    name: 'WIP Title Check'
    validate:
      - do: title
        # Do not merge when it is marked work in progress (WIP)
        must_exclude:
          regex: \[WIP\]|\bWIP\b|ðŸš§
          message: This is work in progress. Do not merge yet.

  - when: pull_request.*
    name: 'Empty Description Check'
    validate:
      - no_empty:
          # Do not allow empty descriptions on PR.
          enabled: true
          message: 'Description can not be empty.'
    fail:
      - do: checks
        status: 'failure'
        payload: *checks_failure_payload
        leave_old_comment: false
      - do: comment
        payload:
          body: 'Description is necessary and should not be empty. Kindly provide details with **what** was changed, **why** it was changed, and **how** it was changed.'

  - when: pull_request.*
    name: 'WIP Description Check'
    fail:
      - do: checks
        status: 'failure'
        payload: *checks_failure_payload
        leave_old_comment: false
    validate:
      # Do not allow 'DO NOT MERGE' phrase on PR's description.
      - do: description
        must_exclude:
          # Do not allow 'DO NOT MERGE' phrase on PR's description.
          regex: 'DO NOT MERGE'
          message: 'Description says that the PR should not be merged yet.'

  - when: pull_request.*
    name: 'Labels Check'
    fail:
      - do: checks
        status: 'failure'
        payload: *checks_failure_payload
        leave_old_comment: false
    validate:
       # Do not allow PR with label 'PR: work in progress'                
      - do: label
        must_exclude:
          regex: 'progress|do-not-merge|wip'     
          message: 'This PR is flagged as a work in progress.'
      - do: label
        must_exclude:
          regex: 'feedback'     
          message: 'This PR is flagged as waiting for feedback.'          
      - do: label
        must_exclude:
          regex: 'duplicate'        
          message: 'This PR is flagged as a duplicate.'
      - do: label
        must_exclude:
          regex: 'invalid'        
          message: 'This PR is flagged as a invalid.'                      
      - do: label
        message: Must be labeled `ok-to-merge`
        must_include:
          regex: 'ok-to-merge'
      - do: label
        no_empty:
          message: PR needs to be labeled
          enabled: true   


  - when: 'pull_request.*'
    name: README check
    fail:
      - do: checks
        status: 'failure'
        payload: *checks_failure_payload
        leave_old_comment: false
      - do: comment
        payload:
          body: 'Please update the README.md by running `make readme` and commit the changes.'
    validate:
    - do: dependent
      files: ['README.md', 'README.yaml']
      message: README.md and README.yaml must be updated together
      # If README.yaml is updated, README.md must be updated too
    - do: dependent
      changed:
        file: 'README.yaml'
        files: ['README.md']

  - when: pull_request.closed
    name: 'Delete Labels on PR close'
    validate: []
    pass:
      - do: labels
        labels: ['ok-to-test', 'ok-to-merge', 'triage', 'stale']
        mode: delete

  # See https://github.com/Eastwooder/source-warden/blob/f7aac2f91c09e5ee664477dc89aa285a1b60703e/mergeable-compatibility-layer/tests/all-configurable-elements-test.yaml
  - when: pull_request_review.*
    name: Approval check
    validate:
    # Check committer is not the author. This is to prevent self-approval.
    - do: approvals
      min:
        count: 1 # Number of minimum reviewers. In this case 2.
        message: 'Custom message...'
      required:
        # list of github usernames required to review
        reviewers: 
          - ourtestcontributor
          - osterman

        # Optional boolean. When true, the file .github/CODEOWNERS is read and owners made required reviewers
        owners: false
        # Optional boolean. When true, PR assignees are made required reviewers.
        assignees: false 
        # Optional boolean. When true, all the requested reviewer's approval is required
        requested_reviewers: false 
        message: 'PR review required!'


#- when: pull_request.*
#    name: CHANGELOG check
#    validate:        
#    - do: dependent
#      changed:
#        file: '*'
#        files: ['CHANGELOG.md']
#        message: Missing CHANGELOG entry